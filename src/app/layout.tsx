import "~/styles/globals.css";

import { type Metadata } from "next";
import { Geist } from "next/font/google";

import { TRPCReactProvider } from "~/trpc/react";
import { HydrateClient } from "~/trpc/server";
import { Toaster } from "~/components/ui/sonner";
import {
  validateSessionToken,
  validateSessionTokenCookie,
} from "~/server/auth/validate";
import { AuthUserProvider } from "./_components/authUserProvider";
import { cookies } from "next/headers";

export const metadata: Metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

const geist = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans",
});

export default async function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  const authUser = await validateSessionTokenCookie();
  const cookie = await cookies();

  return (
    <html lang="en" className={`${geist.variable}`}>
      <body>
        <TRPCReactProvider>
          <HydrateClient>
            <AuthUserProvider
              user={
                authUser
                  ? {
                      ...authUser,
                      sessionToken: cookie.get("rrSessionToken")!.value,
                    }
                  : null
              }
            >
              {children}
            </AuthUserProvider>
          </HydrateClient>
        </TRPCReactProvider>
        <Toaster />
      </body>
    </html>
  );
}
